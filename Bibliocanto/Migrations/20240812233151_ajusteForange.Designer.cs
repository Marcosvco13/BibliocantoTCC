// <auto-generated />
using Bibliocanto.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bibliocanto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240812233151_ajusteForange")]
    partial class ajusteForange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bibliocanto.Models.Autores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeAutor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Autores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            NomeAutor = "Karl Marx"
                        },
                        new
                        {
                            Id = 101,
                            NomeAutor = "Fiódor Dostoiévsk"
                        });
                });

            modelBuilder.Entity("Bibliocanto.Models.Livros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1555)
                        .HasColumnType("nvarchar(1555)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Livros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            AutorId = 100,
                            Descricao = "Teste1",
                            Titulo = "O Capital"
                        },
                        new
                        {
                            Id = 101,
                            AutorId = 101,
                            Descricao = "Teste2",
                            Titulo = "Crime e Castigo"
                        });
                });

            modelBuilder.Entity("Bibliocanto.Models.Livros", b =>
                {
                    b.HasOne("Bibliocanto.Models.Autores", "Autores")
                        .WithMany("Livros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autores");
                });

            modelBuilder.Entity("Bibliocanto.Models.Autores", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
